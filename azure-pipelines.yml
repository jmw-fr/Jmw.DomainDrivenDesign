# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.9.3'
  inputs:
    versionSpec: 4.9.3

- task: gittools.gitversion.gitversion-task.GitVersion@4
  displayName: 'GitVersion'
  inputs:
    updateAssemblyInfo: false

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: 'dotnet test Jmw.DomainDrivenDesign.sln  --no-build --configuration $(buildConfiguration) --logger trx --results-directory $(build.artifactstagingdirectory)/TestResults /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(build.artifactstagingdirectory)/TestResults/Coverage/ /p:Include="[Jmw*]Jmw*"'
  displayName: 'dotnet test $(buildConfiguration)'

- script: 'dotnet $(UserProfile)\.nuget\packages\reportgenerator\4.0.8\tools\netcoreapp2.0\ReportGenerator.dll "-reports:$(build.artifactstagingdirectory)/TestResults/Coverage/coverage.cobertura.xml" "-targetdir:$(build.artifactstagingdirectory)/TestResults/Coverage/coveragereport" -reporttypes:HTMLInline'
  displayName: 'reportgenerator'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '$(build.artifactstagingdirectory)/TestResults/*.trx'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(build.artifactstagingdirectory)/TestResults/Coverage/coverage.cobertura.xml'
    reportDirectory: '$(build.artifactstagingdirectory)/TestResults/Coverage/coveragereport'
    failIfCoverageEmpty: true
    
- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: src/Jmw.DDD
    versioningScheme: byEnvVar
    versionEnvVar: GitVersion.NuGetVersion
    packDestination: $(Build.ArtifactStagingDirectory)/packages

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: src/Jmw.DDD.Repositories.EntityFrameworkCore
    versioningScheme: byEnvVar
    versionEnvVar: GitVersion.NuGetVersion
    packDestination: $(Build.ArtifactStagingDirectory)/packages

- task: PublishBuildArtifacts@1
  displayName: 'Publish Package'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/packages'
    ArtifactName: 'Package'
